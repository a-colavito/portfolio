name: Translate and Deploy Hugo site to Pages

on:
  push:
    branches:
      - gh-pages # Il workflow si attiva su push alla branch gh-pages
  workflow_dispatch: # Permette di avviare il workflow manualmente

permissions:
  contents: write # Necessario per scrivere i file tradotti e per il push
  pages: write # Necessario per il deploy a GitHub Pages
  id-token: write # Necessario per l'autenticazione OIDC con GitHub Pages

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest # Esegue il job su un runner Ubuntu
    env:
      HUGO_VERSION: 0.147.2
      HUGO_ENVIRONMENT: production
      TZ: Europe/Rome

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Clona il repository
        with:
          submodules: recursive # Include i sottomoduli
          fetch-depth: 0 # Clona tutta la cronologia (necessario per il commit e il push)
          # Non è più necessario il token: ${{ secrets.GH_PAT }} qui.
          # GitHub Actions userà il GITHUB_TOKEN predefinito che ha permessi di scrittura se 'contents: write' è impostato sopra.

      - name: Setup Python
        uses: actions/setup-python@v4 # Configura l'ambiente Python
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install md-translate

      # Non serve più l'installazione di Chromium/ChromeDriver perché non useremo un traduttore basato su Selenium.
      # - name: Install Chromium and ChromeDriver
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Copy Italian content to English folder
        run: |
          mkdir -p content/en # Assicurati che content/en esista prima di copiare
          cp -r content/it/* content/en/ # Copia il contenuto, non la cartella 'it' al suo interno

      - name: Run md-translate on English folder
        timeout-minutes: 5 # Aggiungi un timeout per questa operazione
        run: |
          # Usiamo LibreTranslate (-P libretranslate) che non richiede browser o API key.
          # È un servizio gratuito e open source, ma la sua affidabilità può variare.
          # Puoi anche provare `-P bing` o `-P yandex` se funzionano senza Selenium.
          md-translate content/en -F it -T en -P libretranslate --processes 1

      - name: Commit and push translated files
        run: |
          git config user.name "github-actions" # Configura il nome utente del commit
          git config user.email "github-actions@github.com" # Configura l'email del commit
          # Verifica se ci sono modifiche da committare per evitare errori
          git diff --exit-code --quiet content/en/ || (git add content/en/ && git commit -m "Add translated Markdown files [auto]")
          # In caso di "no changes to commit", il comando precedente non fallisce.
          git push origin HEAD # Effettua il push alla branch corrente (gh-pages)
        env:
          # GitHub Actions fornisce un GITHUB_TOKEN predefinito che può essere usato per il push.
          # Assicurati che i permessi 'contents: write' siano impostati all'inizio del workflow.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Cache Restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys: hugo-

      - name: Configure Git
        run: git config core.quotepath false

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Hugo
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"

      - name: Cache Save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
